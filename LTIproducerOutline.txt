ALTER TABLE `imas_assessments` ADD `ltisecret` VARCHAR( 10 ) NOT NULL ;
ALTER TABLE `imas_courses` ADD `ltisecret` VARCHAR( 10 ) NOT NULL ;
CREATE TABLE `imas_ltiusers` (
`id` INT( 10 ) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY ,
`org` VARCHAR( 32 ) NOT NULL ,
`ltiuserid` VARCHAR( 32 ) NOT NULL ,
`userid` INT( 10 ) UNSIGNED NOT NULL 
) TYPE = innodb;

CREATE TABLE `imas_ltiaccess` (
`id` INT( 10 ) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY ,
`password` VARCHAR( 32 ) NOT NULL ,
`userid` INT( 10 ) UNSIGNED NOT NULL ,
`itemid` INT( 10 ) UNSIGNED NOT NULL ,
`itemtype` TINYINT( 1 ) UNSIGNED NOT NULL ,
`created` INT( 10 ) UNSIGNED NOT NULL 
) TYPE = innodb;

CREATE TABLE `imas_ltinonces` (
`id` INT( 10 ) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY ,
`nonce` TEXT NOT NULL ,
`time` INT( 10 ) UNSIGNED NOT NULL 
) TYPE = innodb;




$sql = 'CREATE TABLE `imas_ltiusers` ('
        . ' `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY, '
        . ' `org` VARCHAR(32) NOT NULL, '
        . ' `ltiuserid` VARCHAR(32) NOT NULL, '
        . ' `userid` INT(10) NOT NULL'
        . ' )'
        . ' TYPE = innodb;';

$sql = 'CREATE TABLE `imas_ltiaccess` ('
        . ' `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY, '
        . ' `password` VARCHAR(32) NOT NULL, '
        . ' `userid` INT(10) UNSIGNED NOT NULL, '
        . ' `itemid` INT(10) UNSIGNED NOT NULL, '
        . ' `itemtype` TINYINT(1) UNSIGNED NOT NULL, '
        . ' `time` INT(10) UNSIGNED NOT NULL'
        . ' )'
        . ' TYPE = innodb;';

$sql = 'CREATE TABLE `imas_ltinonces` ('
        . ' `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY, '
        . ' `nonce` TEXT NOT NULL, '
        . ' `time` INT(10) UNSIGNED NOT NULL'
        . ' )'
        . ' TYPE = innodb;';
	
imas_ltiusers
	id INT autoincrement
	org varchar
	ltiuid varchar
	userid INT

imas_ltiaccess
	int INT autoincrement
	pass varchar 
	userid INT
	itemid	INT
	itemtype  BOOL   0: assessment, 1: course
	time	INT
	
imas_assessments, add:
	ltipw	varchar

imas_courses, add:
	ltips	varchar
	
imas_ltinonces
	nonce text(1024)


Launch Negotiation (REST/curl call)
	read:
		$aid = $_GET['aid']; 
		  OR
		$cid = $_GET['cid'];
		$uid = $_POST['user_id'];
		$role = $_POST['user_role'];
		$org = $_POST['org_id'];
		$sec = $_POST['sec_digest'];
		$nonce = $_POST['sec_nonce'];
		$created = $_POST['sec_created'];
		
	return error on missing info

	from aid, read:
		$cid
		startdate, enddate, return not available url if not available
		aidpassword
	OR
	from cid read:
		available, return not available url if not available
		cidpassword
		
	check created is recent, check nonce in recently used table, check $sec digest,
	throw error if invalid
	
	Look up "org='$org' AND uid='$uid'" in LTIusers table, 
	if there, 
		pull $userid, 
		verify in course, 
			if not enroll
	if not, 
		create new user, 
		enroll in course
	
	Create entry in LTIaccess table
		id - auto
		password - random
		userid - $userid
		itemid - $aid or $cid
		itemtype - 0 for aid, 1 for cid
		time - timestamp
	
	Delete old unused access table entries
		
	Return url response header, url w/ id and pass
	
Launch (in iframe now)
On first call: (need mathgraph info)
	use id to lookup info
	verify pass and timestamp within bounds
	delete LTIaccess entry	
	
	write session table entry

	lookup aid timelimit, if any
	
	if aid:
	   if mathgraphprefs cookie exists AND no timelimit, 
	   	write sessiondata
	    	redirect to assessment, 
	   else,
	   	write aid or cid as sessiondata
		return page with form, posting to self
		mathgraphcheck.js writing to hidden fields a/o accessibility options
		"Begin" button with timelimit warning popup
	
	if cid, 
	    if mathgraphprefs cookie exists, 
	    	write sessiondata
	    	redirect to course page
	    else,
	    	write aid or cid as sessiondata
		return form, posting to self
		mathgraphcheck.js writing to hidden fields a/o accessibility options
		"Begin" button

On second call:
if aid,
	read aid,cid from sessiondata
	overwrite sessiondata with math/graph settings
	redirect to showtest, with "die at end"
if cid,
	read cid from sessiondata
	overwrite sessiondata with math/graph settings
	redirect to course page
	
	
	
	
	
		
	
		
	
		
